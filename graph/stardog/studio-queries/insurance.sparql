# Flood_Zone
prefix kg: <tag:stardog:api:context:>

select * FROM kg:local {
?address  a :Address;
        :Built_In ?flood.
?flood a :Floodplain;
          :Zone_Subtype ?zone.
FILTER(?address=<http://api.stardog.com/Address#99>)
}

# Home address
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wgs: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX geo: <http://www.opengis.net/ont/geosparql#>
PREFIX : <http://api.stardog.com/>
prefix geof: <http://www.opengis.net/def/function/geosparql/>
prefix unit: <http://qudt.org/vocab/unit#>
prefix kg: <tag:stardog:api:context:>


select * FROM kg:local {
?address  a :Address;
        :Full_Address ?fullAddress;
        :Zip ?zip;
        :Latitude ?latitude;
        :Longitude ?longitude;
        geo:hasGeometry ?addressCoordinates.
FILTER(?address=<http://api.stardog.com/Address#99>)
}

# Home info
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wgs: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX geo: <http://www.opengis.net/ont/geosparql#>
PREFIX : <http://api.stardog.com/>
prefix geof: <http://www.opengis.net/def/function/geosparql/>
prefix unit: <http://qudt.org/vocab/unit#>
prefix kg: <tag:stardog:api:context:>


select ?address ?crime FROM kg:local {{
select ?address ?crime ?addressCoordinates ?crimeCoordinates ?distance
{{
#####
select ?address  ?addressCoordinates {
?address  a :Address;
        geo:hasGeometry ?addressCoordinates.
?addressCoordinates a geo:Geometry;
                    geo:asWKT ?addressCoords.
FILTER(?address=<http://api.stardog.com/Address#99>)
}}
#####

#####
{
select ?crime ?crimeCoordinates {
     ?crime a :Crime_Incident;
       :Offense ?offense;
       geo:hasGeometry ?crimeCoordinates.
 ?crimeCoordinates a geo:Geometry;
        geo:asWKT ?crimeCoords.
 FILTER(?offense IN("BURGLARY","THEFT/OTHER"))
}}

#####
BIND(geof:distance(?addressCoordinates, ?crimeCoordinates, unit:MileUSStatute) as ?distance)
}

 }
 FILTER(?distance <= .25)

}

# Insurance address dist to crime
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wgs: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX geo: <http://www.opengis.net/ont/geosparql#>
PREFIX : <http://api.stardog.com/>
prefix geof: <http://www.opengis.net/def/function/geosparql/>
prefix unit: <http://qudt.org/vocab/unit#>
prefix kg: <tag:stardog:api:context:>


select ?address ?crime FROM kg:local {{
select ?address ?crime ?addressCoordinates ?crimeCoordinates ?distance
{{
#####
select ?address  ?addressCoordinates {
?address  a :Address;
        geo:hasGeometry ?addressCoordinates.
?addressCoordinates a geo:Geometry;
                    geo:asWKT ?addressCoords.
}}
#####

#####
{
select ?crime ?crimeCoordinates {
     ?crime a :Crime_Incident;
       :Offense ?offense;
       geo:hasGeometry ?crimeCoordinates.
 ?crimeCoordinates a geo:Geometry;
        geo:asWKT ?crimeCoords.
 FILTER(?offense IN("BURGLARY","THEFT/OTHER"))
}}

#####
BIND(geof:distance(?addressCoordinates, ?crimeCoordinates, unit:MileUSStatute) as ?distance)
}

 }
 FILTER(?distance <= .25)

}

## stored query: insurance_insert_quote
prefix spa: <tag:stardog:api:analytics:>
PREFIX : <http://api.stardog.com/>

# INSERT {?quote a :Quote;
#                rdfs:label ?premiumLabel;
#                :Premium_Estimate ?predictedPremium.
#         <http://api.stardog.com/Address#99> :estimate ?quote} WHERE {
SELECT distinct ?quote ?predictedPremium ?premiumLabel  WHERE {
  graph spa:model {
      :premiumModel  spa:arguments (?fireDistance ?policeDistance ?assessedValue ?crimeCount) ;
                spa:predict ?predictedPremium .
  }

    <http://api.stardog.com/Address#99> a :Address;
           #  :Insured_By ?insurance;
             :Assessed_For ?assessment;
             :Minimum_Fire_Station_Distance ?fireDistance;
             :Minimum_Police_Station_Distance ?policeDistance;
             :Resides_In ?zipCode.
     #   ?insurance a :Insurance_Policy;
      #         :Premium ?premium.
        ?assessment a :Assessment;
                    :Assessment_Value ?assessedValue.
        ?zipCode a :Zip_Codes.
{select ?zipCode (SUM(?crimeCount) as ?totalCnt) {
    ?statIRI a :Crime_Stats;
                   :Crime_Count ?crimeCount;
                   :Occurred_In ?zipCode.
}
GROUP BY ?zipCode}
BIND(IRI("http://api.stardog.com/Quote#1234") as ?quote)
BIND(CONCAT("$",?predictedPremium) as ?premiumLabel)

}
# }
