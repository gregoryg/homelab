# Default values for tiger.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3
ha: 1
namespace: default
# The name of the StatefulSet (deployment) within the specified namespace
name: tigergraph

image:
  repository: docker.tigergraph.com/tigergraph-k8s
  # repository: tigergraph
  pullPolicy: IfNotPresent
  # pullPolicy: Never
  # Overrides the image tag whose default is the chart appVersion.
  tag: "3.2.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80
# TODO: switch services to use load balancer resource
sshService:
  type: NodePort
  port: 14022
  nodePort: 30022
  targetPort: 22

apiService:
  type: ClusterIP
  port: 9000

uiService:
  type: NodePort
  nodePort: 30240
  port: 14240
  # targetPort: 14240

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Please consider this section to be a minimal specification.
# Adjust only if you want to reserve a set amount of resource
resources:
  requests:
    cpu: 4000m
    memory: 8Gi
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingestVolume:
  name: "data-ingest"
  mountPath: "/home/tigergraph/mydata"
  storageClass: "longhorn"
  accessMode: ReadWriteOnce
  size: "2Gi"
dataVolume:
  name: "tigergraph-data"
  mountPath: "/tgdata"
  storageClass: "longhorn"
  accessMode: ReadWriteOnce
  size: "56Gi"
# Place the data set in data/ dir of this chart
dataset: customer_data.tar.gz
