# Default values for TigerGraph.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3
ha: 1
# The name of the StatefulSet (deployment) within the specified namespace
name: tigergraph
# Pod Management Policy may be set to Parallel for faster deployment (not recommended)
podManagementPolicy: Parallel

image:
  repository: docker.tigergraph.com/tigergraph-k8s
  # repository: tigergraph
  pullPolicy: IfNotPresent
  # pullPolicy: Never
  # Overrides the image tag whose default is the chart appVersion.
  tag: "3.5.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # The service account is used by the Installer job and the gui labeler cron job
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "tigergraph-installer"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80
# TODO: switch services to use load balancer resource
# sshService:
#   type: NodePort
#   port: 14022
#   nodePort: 30022
#   targetPort: 22

apiService:
  type: ClusterIP
  port: 9000

uiService:
  type: NodePort
  nodePort: 30240
  port: 14240
  # targetPort: 14240

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Please consider this section to be a minimal specification.
# Adjust only if you want to reserve a set amount of resource
resources:
  requests:
    cpu: 4000m
    memory: 8Gi
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
# podSpec:
#   # Anti Affinity
#   # If set to true then an anti-affinity rule is applied to prevent database pods with the same `xxx.name` running on a single Kubernetes node.
#   # If set to false then no anti-affinity rules are applied
#   # If set to an object then that object is used for the xxx podAntiAffinity
#   podAntiAffinity: true



# Persistnt volumes
# dataVolume will be mounted to the default TigerGraph DataRoot at /home/tigergraph/tigergraph/data
dataVolume:
  name: "tigergraph-data"
  mountPath: "/home/tigergraph/tigergraph/data"
  storageClass: "longhorn"
  accessMode: ReadWriteOnce
  size: "56Gi"
# ingestVolume may optionally be added to assist in data ingest
# to use, set ingestVolume.create: true
ingestVolume:
  create: true
  name: "data-ingest"
  mountPath: "/home/tigergraph/mydata"
  storageClass: "longhorn"
  accessMode: ReadWriteOnce
  size: "22Gi"
# Place the data set in data/ dir of this chart
# dataset: customer_data.tar.gz
